version: '3.7'
services:
  ########################################################
  i40-aas-data-manager:
    image: sapi40/i40-aas-data-manager
    ports:
      - "${CORE_DATA_MANAGER_PORT}:${CORE_DATA_MANAGER_PORT}"
    environment:
      ## logging
      - LOGGING_LOGLEVEL=${LOGGING_LOGLEVEL}
      - LOGGING_LOGOUTPUT=${LOGGING_LOGOUTPUT}

      ## data-manager
      - CORE_DATA_MANAGER_PORT=${CORE_DATA_MANAGER_PORT}
      - CORE_DATA_MANAGER_USER=${CORE_DATA_MANAGER_USER}
      - CORE_DATA_MANAGER_PASSWORD=${CORE_DATA_MANAGER_PASSWORD}
      - KAFKA_TOPIC_AASENV=${KAFKA_TOPIC_AASENV}
      - KAFKA_TOPIC_CONCEPTDESCRIPTION=${KAFKA_TOPIC_CONCEPTDESCRIPTION}
      - KAFKA_TOPIC_AAS=${KAFKA_TOPIC_AAS}
      - KAFKA_TOPIC_ASSET=${KAFKA_TOPIC_ASSET}
      - KAFKA_TOPIC_SUBMODEL=${KAFKA_TOPIC_SUBMODEL}

      ## TLS
      - TLS_ENABLED=${TLS_ENABLED}
      - TLS_KEYFILE=${TLS_KEYFILE}
      - TLS_CERTFILE=${TLS_CERTFILE}
    volumes:
      - ./src/compose/volumes/certs/:/etc/ssl/certs/

  ########################################################
  #### third party containers
  ##########################################

  postgres:
    image: postgres:alpine
    ports:
      - "${CORE_REGISTRIES_ENDPOINTS_DATABASE_PORT}:${CORE_REGISTRIES_ENDPOINTS_DATABASE_PORT}"
    volumes:
      - ./src/compose/volumes/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${CORE_REGISTRIES_ENDPOINTS_DATABASE_USER}
      - POSTGRES_PASSWORD=${CORE_REGISTRIES_ENDPOINTS_DATABASE_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES="${CORE_REGISTRIES_ENDPOINTS_DATABASE_NAME}","${CORE_REGISTRIES_ADAPTERS_DATABASE_NAME}"
  ##########################################
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    build: .
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
