version: '3.7'
services:
  ########################################################
  i40-aas-data-manager:
    image: sapi40/i40-aas-data-manager-type2
    ports:
      - "${DATA_MANAGER_PORT}:${DATA_MANAGER_PORT}"
    environment:
      ## logging
      - LOGGING_LOGLEVEL=${LOGGING_LOGLEVEL}
      - LOGGING_LOGOUTPUT=${LOGGING_LOGOUTPUT}
      ## data-manager
      - DATA_MANAGER_PORT=${DATA_MANAGER_PORT}
      - DATA_MANAGER_USER=${DATA_MANAGER_USER}
      - DATA_MANAGER_PASSWORD=${DATA_MANAGER_PASSWORD}
      ## kafka
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:${KAFKA_PORT}
      - KAFKA_TOPIC_AASENV=${KAFKA_TOPIC_AASENV}
      - KAFKA_TOPIC_CONCEPTDESCRIPTION=${KAFKA_TOPIC_CONCEPTDESCRIPTION}
      - KAFKA_TOPIC_AAS=${KAFKA_TOPIC_AAS}
      - KAFKA_TOPIC_ASSET=${KAFKA_TOPIC_ASSET}
      - KAFKA_TOPIC_SUBMODEL=${KAFKA_TOPIC_SUBMODEL}
      ## postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      ## TLS
      - TLS_ENABLED=${TLS_ENABLED}
      - TLS_KEYFILE=${TLS_KEYFILE}
      - TLS_CERTFILE=${TLS_CERTFILE}
    volumes:
      - ./src/compose/volumes/certs/:/etc/ssl/certs/

  ########################################################
  #### third party containers
  ##########################################
  postgres:
    image: postgres:alpine
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./src/compose/volumes/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
  ##########################################
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
  ##########################################
  ##########################################
  dbMonnitor:
    image: hyunjongcho/tadpoledbhub
    ports:
      - 32768:8080
  ##########################################
  kafka:
    image: wurstmeister/kafka
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    expose:
      - "${KAFKA_EXPOSE}"
    environment:
      KAFKA_ADVERTISED_LISTENERS: "INSIDE://kafka:${KAFKA_EXPOSE},OUTSIDE://localhost:${KAFKA_PORT}"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: "INSIDE://0.0.0.0:${KAFKA_EXPOSE},OUTSIDE://0.0.0.0:${KAFKA_PORT}"
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_PORT}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  ##########################################


volumes:
  postgres-data:
